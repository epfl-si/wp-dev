# docker-compose.yml for running a local copy of the WordPress stack
#
# Unlike the real thing, there is no Varnish (but there is phpmyadmin)
#
# This docker-compose.yml file works hand-to-hand with the Makefie,
# which ensures that all required images are built, and code
# repositories are checked out.
#
# docker compose automatically sources the .env file if it exists
# (see https://docs.docker.com/compose/environment-variables/#the-env-file);
# this is what makes the ${VARIABLE} expansions below work.

version: '3'

services:

  db:
    container_name: wp-db
    image: mariadb:10.9.4
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - /var/lib/mysql

  phpmyadmin:
    container_name: wp-pma
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    ports:
      - ${WP_PORT_PHPMA}:80
    volumes:
      - /sessions

  nginx:
    privileged: true
    container_name: wp-httpd
    build: wp-ops/docker/nginx
    labels:
      ch.epfl.wordpress.nginx.env: ${WP_ENV}
    image: docker-registry.default.svc:5000/wwp-test/nginx
    volumes:
      # See README.md and Makefile for explanations on volumes
      - ./volumes/srv/www:/www-data
      # Unlike production, /wp is editable from outside the Docker
      # container, and contains the "live" code (in the form of
      # Git checkouts; see Makefile)
      - ./volumes/wp:/wp
      # Certificates are auto-generated when httpd first starts up.
      # For comfort, keep them across restarts
      - ./volumes/ssl:/etc/nginx/ssl
    links:
      - db:db
    # The `httpd` container only needs to know WP_ENV:
    environment:
      - WP_ENV=${WP_ENV}
      - SMTP_SECRET=${SMTP_SECRET}
    ports:
      - "${WP_PORT_HTTP}:8080"
      - "${WP_PORT_HTTPS}:8443"

  mgmt:
    container_name: wp-mgmt
    labels:
      ch.epfl.wordpress.mgmt.env: ${WP_ENV}
    image: docker-registry.default.svc:5000/wwp-test/mgmt
    build: wp-ops/docker/mgmt
    # The `mgmt` container gets access to the entire environment:
    env_file:
      - .env
    environment:
      - WP_ENV=${WP_ENV}
      - MYSQL_DB_HOST=${MYSQL_DB_HOST}
      - MYSQL_SUPER_USER=${MYSQL_SUPER_USER}
      - MYSQL_SUPER_PASSWORD=${MYSQL_SUPER_PASSWORD}
    volumes:
      - ./volumes/srv:/srv
      - ./volumes/wp:/wp
      - ./volumes/wp/wp-cli/vendor/epfl-si:/var/www/.wp-cli/packages/vendor/epfl-si
      - ./volumes/wp/wp-cli/vendor/cortneyray:/var/www/.wp-cli/packages/vendor/cortneyray
      - .env:/srv/.env
      - ./volumes/usrlocalbin:/usr/local/bin
      - ./wp-ops:/wp-ops
    ports:
      - "${WP_PORT_SSHD}:22"

  menu-api:
    container_name: menu-api
    build: menu-api
